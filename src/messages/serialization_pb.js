// source: serialization.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.serialization.AccountBalance', null, global);
goog.exportSymbol('proto.serialization.AccountBalanceUpdatedMessage', null, global);
goog.exportSymbol('proto.serialization.AccountInfoMessage', null, global);
goog.exportSymbol('proto.serialization.AccountInfoRequest', null, global);
goog.exportSymbol('proto.serialization.Deal', null, global);
goog.exportSymbol('proto.serialization.Deal.DealDirection', null, global);
goog.exportSymbol('proto.serialization.Deal.DealType', null, global);
goog.exportSymbol('proto.serialization.DealCreatedMessage', null, global);
goog.exportSymbol('proto.serialization.MessageWrapper', null, global);
goog.exportSymbol('proto.serialization.MessageWrapper.MessageType', null, global);
goog.exportSymbol('proto.serialization.Order', null, global);
goog.exportSymbol('proto.serialization.Order.OrderSide', null, global);
goog.exportSymbol('proto.serialization.Order.OrderStatus', null, global);
goog.exportSymbol('proto.serialization.Order.OrderTimeInForce', null, global);
goog.exportSymbol('proto.serialization.Order.OrderType', null, global);
goog.exportSymbol('proto.serialization.OrderCancelRejectedMessage', null, global);
goog.exportSymbol('proto.serialization.OrderCancelRequest', null, global);
goog.exportSymbol('proto.serialization.OrderCreateRejectedMessage', null, global);
goog.exportSymbol('proto.serialization.OrderCreateRequest', null, global);
goog.exportSymbol('proto.serialization.OrderCreatedMessage', null, global);
goog.exportSymbol('proto.serialization.OrderDeletedMessage', null, global);
goog.exportSymbol('proto.serialization.OrderMassCancelRequest', null, global);
goog.exportSymbol('proto.serialization.OrderMassStatusMessage', null, global);
goog.exportSymbol('proto.serialization.OrderMassStatusRequest', null, global);
goog.exportSymbol('proto.serialization.OrderModifyRejectedMessage', null, global);
goog.exportSymbol('proto.serialization.OrderModifyRequest', null, global);
goog.exportSymbol('proto.serialization.OrderUpdatedMessage', null, global);
goog.exportSymbol('proto.serialization.Position', null, global);
goog.exportSymbol('proto.serialization.Position.PositionType', null, global);
goog.exportSymbol('proto.serialization.PositionCloseByRejectedMessage', null, global);
goog.exportSymbol('proto.serialization.PositionCloseByRequest', null, global);
goog.exportSymbol('proto.serialization.PositionCreatedMessage', null, global);
goog.exportSymbol('proto.serialization.PositionDeletedMessage', null, global);
goog.exportSymbol('proto.serialization.PositionMassStatusMessage', null, global);
goog.exportSymbol('proto.serialization.PositionMassStatusRequest', null, global);
goog.exportSymbol('proto.serialization.PositionModifyRejectedMessage', null, global);
goog.exportSymbol('proto.serialization.PositionModifyRequest', null, global);
goog.exportSymbol('proto.serialization.PositionUpdatedMessage', null, global);
goog.exportSymbol('proto.serialization.RequestWrapper', null, global);
goog.exportSymbol('proto.serialization.RequestWrapper.RequestType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.RequestWrapper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.RequestWrapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.RequestWrapper.displayName = 'proto.serialization.RequestWrapper';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.MessageWrapper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.MessageWrapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.MessageWrapper.displayName = 'proto.serialization.MessageWrapper';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.Order.displayName = 'proto.serialization.Order';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderMassStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderMassStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderMassStatusRequest.displayName = 'proto.serialization.OrderMassStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderCreateRequest.displayName = 'proto.serialization.OrderCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderModifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderModifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderModifyRequest.displayName = 'proto.serialization.OrderModifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderCancelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderCancelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderCancelRequest.displayName = 'proto.serialization.OrderCancelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderMassCancelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderMassCancelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderMassCancelRequest.displayName = 'proto.serialization.OrderMassCancelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderMassStatusMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.serialization.OrderMassStatusMessage.repeatedFields_, null);
};
goog.inherits(proto.serialization.OrderMassStatusMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderMassStatusMessage.displayName = 'proto.serialization.OrderMassStatusMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderCreatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderCreatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderCreatedMessage.displayName = 'proto.serialization.OrderCreatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderCreateRejectedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderCreateRejectedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderCreateRejectedMessage.displayName = 'proto.serialization.OrderCreateRejectedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderUpdatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderUpdatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderUpdatedMessage.displayName = 'proto.serialization.OrderUpdatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderModifyRejectedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderModifyRejectedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderModifyRejectedMessage.displayName = 'proto.serialization.OrderModifyRejectedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderDeletedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderDeletedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderDeletedMessage.displayName = 'proto.serialization.OrderDeletedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.OrderCancelRejectedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.OrderCancelRejectedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.OrderCancelRejectedMessage.displayName = 'proto.serialization.OrderCancelRejectedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.Position.displayName = 'proto.serialization.Position';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionMassStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.PositionMassStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionMassStatusRequest.displayName = 'proto.serialization.PositionMassStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionModifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.PositionModifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionModifyRequest.displayName = 'proto.serialization.PositionModifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionCloseByRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.PositionCloseByRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionCloseByRequest.displayName = 'proto.serialization.PositionCloseByRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionMassStatusMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.serialization.PositionMassStatusMessage.repeatedFields_, null);
};
goog.inherits(proto.serialization.PositionMassStatusMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionMassStatusMessage.displayName = 'proto.serialization.PositionMassStatusMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionCreatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.PositionCreatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionCreatedMessage.displayName = 'proto.serialization.PositionCreatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionUpdatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.PositionUpdatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionUpdatedMessage.displayName = 'proto.serialization.PositionUpdatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionModifyRejectedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.PositionModifyRejectedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionModifyRejectedMessage.displayName = 'proto.serialization.PositionModifyRejectedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionDeletedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.PositionDeletedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionDeletedMessage.displayName = 'proto.serialization.PositionDeletedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.PositionCloseByRejectedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.PositionCloseByRejectedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.PositionCloseByRejectedMessage.displayName = 'proto.serialization.PositionCloseByRejectedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.Deal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.Deal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.Deal.displayName = 'proto.serialization.Deal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.DealCreatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.DealCreatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.DealCreatedMessage.displayName = 'proto.serialization.DealCreatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.AccountBalance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.AccountBalance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.AccountBalance.displayName = 'proto.serialization.AccountBalance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.AccountInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.AccountInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.AccountInfoRequest.displayName = 'proto.serialization.AccountInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.AccountInfoMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.serialization.AccountInfoMessage.repeatedFields_, null);
};
goog.inherits(proto.serialization.AccountInfoMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.AccountInfoMessage.displayName = 'proto.serialization.AccountInfoMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.serialization.AccountBalanceUpdatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.serialization.AccountBalanceUpdatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.serialization.AccountBalanceUpdatedMessage.displayName = 'proto.serialization.AccountBalanceUpdatedMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.RequestWrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.RequestWrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.RequestWrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.RequestWrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.RequestWrapper}
 */
proto.serialization.RequestWrapper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.RequestWrapper;
  return proto.serialization.RequestWrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.RequestWrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.RequestWrapper}
 */
proto.serialization.RequestWrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.serialization.RequestWrapper.RequestType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.RequestWrapper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.RequestWrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.RequestWrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.RequestWrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.serialization.RequestWrapper.RequestType = {
  REQ_UNKNOWN: 0,
  REQ_ORDER_CREATE: 1,
  REQ_ORDER_MODIFY: 2,
  REQ_ORDER_CANCEL: 3,
  REQ_ORDER_MASS_CANCEL: 4,
  REQ_ORDER_MASS_STATUS: 5,
  REQ_POSITION_MODIFY: 6,
  REQ_POSITION_CLOSEBY: 7,
  REQ_POSITION_MASS_STATUS: 8,
  REQ_ACCOUNT_INFO: 9
};

/**
 * optional RequestType Type = 1;
 * @return {!proto.serialization.RequestWrapper.RequestType}
 */
proto.serialization.RequestWrapper.prototype.getType = function() {
  return /** @type {!proto.serialization.RequestWrapper.RequestType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.serialization.RequestWrapper.RequestType} value
 * @return {!proto.serialization.RequestWrapper} returns this
 */
proto.serialization.RequestWrapper.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes Data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.serialization.RequestWrapper.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes Data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.serialization.RequestWrapper.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.serialization.RequestWrapper.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.serialization.RequestWrapper} returns this
 */
proto.serialization.RequestWrapper.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.MessageWrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.MessageWrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.MessageWrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.MessageWrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.MessageWrapper}
 */
proto.serialization.MessageWrapper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.MessageWrapper;
  return proto.serialization.MessageWrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.MessageWrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.MessageWrapper}
 */
proto.serialization.MessageWrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.serialization.MessageWrapper.MessageType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.MessageWrapper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.MessageWrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.MessageWrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.MessageWrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.serialization.MessageWrapper.MessageType = {
  MSG_UNKNOWN: 0,
  MSG_ORDER_CREATED: 1,
  MSG_ORDER_UPDATED: 2,
  MSG_ORDER_DELETED: 3,
  MSG_ORDER_MASS_STATUS: 4,
  MSG_ORDER_CREATE_REJECTED: 5,
  MSG_ORDER_MODIFY_REJECTED: 6,
  MSG_ORDER_CANCEL_REJECTED: 7,
  MSG_POSITION_CREATED: 8,
  MSG_POSITION_UPDATED: 9,
  MSG_POSITION_DELETED: 10,
  MSG_POSITION_MASS_STATUS: 11,
  MSG_POSITION_MODIFY_REJECTED: 12,
  MSG_POSITION_CLOSEBY_REJECTED: 13,
  MSG_DEAL_CREATED: 14,
  MSG_ACCOUNT_INFO: 15,
  MSG_ACCOUNT_BALANCE_UPDATED: 16
};

/**
 * optional MessageType Type = 1;
 * @return {!proto.serialization.MessageWrapper.MessageType}
 */
proto.serialization.MessageWrapper.prototype.getType = function() {
  return /** @type {!proto.serialization.MessageWrapper.MessageType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.serialization.MessageWrapper.MessageType} value
 * @return {!proto.serialization.MessageWrapper} returns this
 */
proto.serialization.MessageWrapper.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes Data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.serialization.MessageWrapper.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes Data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.serialization.MessageWrapper.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.serialization.MessageWrapper.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.serialization.MessageWrapper} returns this
 */
proto.serialization.MessageWrapper.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.Order} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    externalid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    account: jspb.Message.getFieldWithDefault(msg, 3, 0),
    positionid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    positionbyid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    side: jspb.Message.getFieldWithDefault(msg, 6, 0),
    type: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timeinforce: jspb.Message.getFieldWithDefault(msg, 8, 0),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0),
    volumeremain: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    volumeinitial: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    pricetrigger: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    pricesl: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    pricetp: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    expirationtime: jspb.Message.getFieldWithDefault(msg, 16, 0),
    createtime: jspb.Message.getFieldWithDefault(msg, 17, 0),
    digits: jspb.Message.getFieldWithDefault(msg, 18, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 19, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.Order}
 */
proto.serialization.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.Order;
  return proto.serialization.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.Order}
 */
proto.serialization.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExternalid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositionid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositionbyid(value);
      break;
    case 6:
      var value = /** @type {!proto.serialization.Order.OrderSide} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 7:
      var value = /** @type {!proto.serialization.Order.OrderType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {!proto.serialization.Order.OrderTimeInForce} */ (reader.readEnum());
      msg.setTimeinforce(value);
      break;
    case 9:
      var value = /** @type {!proto.serialization.Order.OrderStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolumeremain(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolumeinitial(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricetrigger(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricesl(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricetp(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationtime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDigits(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.Order.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.Order} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.Order.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getExternalid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPositionid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPositionbyid();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getTimeinforce();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getVolumeremain();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getVolumeinitial();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getPricetrigger();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getPricesl();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getPricetp();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getExpirationtime();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getDigits();
  if (f !== 0) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.serialization.Order.OrderSide = {
  ORD_SIDE_UNKNOWN: 0,
  ORD_SIDE_BUY: 1,
  ORD_SIDE_SELL: 2
};

/**
 * @enum {number}
 */
proto.serialization.Order.OrderType = {
  ORD_TYPE_UNKNOWN: 0,
  ORD_TYPE_MARKET: 1,
  ORD_TYPE_LIMIT: 2,
  ORD_TYPE_STOP: 3,
  ORD_TYPE_STOP_LIMIT: 4
};

/**
 * @enum {number}
 */
proto.serialization.Order.OrderTimeInForce = {
  ORD_TIME_UNKNOWN: 0,
  ORD_TIME_GTC: 1,
  ORD_TIME_IOC: 2,
  ORD_TIME_FOK: 3,
  ORD_TIME_GTD: 4
};

/**
 * @enum {number}
 */
proto.serialization.Order.OrderStatus = {
  ORD_STATUS_UNKNOWN: 0,
  ORD_STATUS_STARTED: 1,
  ORD_STATUS_PLACED: 2,
  ORD_STATUS_CANCELED: 3,
  ORD_STATUS_PARTIAL: 4,
  ORD_STATUS_FILLED: 5,
  ORD_STATUS_REJECTED: 6,
  ORD_STATUS_EXPIRED: 7,
  ORD_STATUS_REQUEST_ADD: 8,
  ORD_STATUS_REQUEST_MODIFY: 9,
  ORD_STATUS_REQUEST_CANCEL: 10
};

/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.serialization.Order.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 ExternalId = 2;
 * @return {number}
 */
proto.serialization.Order.prototype.getExternalid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 Account = 3;
 * @return {number}
 */
proto.serialization.Order.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 PositionId = 4;
 * @return {number}
 */
proto.serialization.Order.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setPositionid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 PositionById = 5;
 * @return {number}
 */
proto.serialization.Order.prototype.getPositionbyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setPositionbyid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional OrderSide Side = 6;
 * @return {!proto.serialization.Order.OrderSide}
 */
proto.serialization.Order.prototype.getSide = function() {
  return /** @type {!proto.serialization.Order.OrderSide} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.serialization.Order.OrderSide} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional OrderType Type = 7;
 * @return {!proto.serialization.Order.OrderType}
 */
proto.serialization.Order.prototype.getType = function() {
  return /** @type {!proto.serialization.Order.OrderType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.serialization.Order.OrderType} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional OrderTimeInForce TimeInForce = 8;
 * @return {!proto.serialization.Order.OrderTimeInForce}
 */
proto.serialization.Order.prototype.getTimeinforce = function() {
  return /** @type {!proto.serialization.Order.OrderTimeInForce} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.serialization.Order.OrderTimeInForce} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setTimeinforce = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional OrderStatus Status = 9;
 * @return {!proto.serialization.Order.OrderStatus}
 */
proto.serialization.Order.prototype.getStatus = function() {
  return /** @type {!proto.serialization.Order.OrderStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.serialization.Order.OrderStatus} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional double VolumeRemain = 10;
 * @return {number}
 */
proto.serialization.Order.prototype.getVolumeremain = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setVolumeremain = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double VolumeInitial = 11;
 * @return {number}
 */
proto.serialization.Order.prototype.getVolumeinitial = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setVolumeinitial = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double Price = 12;
 * @return {number}
 */
proto.serialization.Order.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double PriceTrigger = 13;
 * @return {number}
 */
proto.serialization.Order.prototype.getPricetrigger = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setPricetrigger = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double PriceSl = 14;
 * @return {number}
 */
proto.serialization.Order.prototype.getPricesl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setPricesl = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double PriceTp = 15;
 * @return {number}
 */
proto.serialization.Order.prototype.getPricetp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setPricetp = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional int64 ExpirationTime = 16;
 * @return {number}
 */
proto.serialization.Order.prototype.getExpirationtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setExpirationtime = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 CreateTime = 17;
 * @return {number}
 */
proto.serialization.Order.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setCreatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional uint32 Digits = 18;
 * @return {number}
 */
proto.serialization.Order.prototype.getDigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setDigits = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string Symbol = 19;
 * @return {string}
 */
proto.serialization.Order.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string Comment = 20;
 * @return {string}
 */
proto.serialization.Order.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.Order} returns this
 */
proto.serialization.Order.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderMassStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderMassStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderMassStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderMassStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderMassStatusRequest}
 */
proto.serialization.OrderMassStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderMassStatusRequest;
  return proto.serialization.OrderMassStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderMassStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderMassStatusRequest}
 */
proto.serialization.OrderMassStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderMassStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderMassStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderMassStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderMassStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.OrderMassStatusRequest.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderMassStatusRequest} returns this
 */
proto.serialization.OrderMassStatusRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Account = 2;
 * @return {number}
 */
proto.serialization.OrderMassStatusRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderMassStatusRequest} returns this
 */
proto.serialization.OrderMassStatusRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Symbol = 3;
 * @return {string}
 */
proto.serialization.OrderMassStatusRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.OrderMassStatusRequest} returns this
 */
proto.serialization.OrderMassStatusRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, 0),
    positionid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    pricetrigger: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    pricesl: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    pricetp: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    expirationtime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    side: jspb.Message.getFieldWithDefault(msg, 10, 0),
    type: jspb.Message.getFieldWithDefault(msg, 11, 0),
    timeinforce: jspb.Message.getFieldWithDefault(msg, 12, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 13, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderCreateRequest}
 */
proto.serialization.OrderCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderCreateRequest;
  return proto.serialization.OrderCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderCreateRequest}
 */
proto.serialization.OrderCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExternalid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositionid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricetrigger(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricesl(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricetp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationtime(value);
      break;
    case 10:
      var value = /** @type {!proto.serialization.Order.OrderSide} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 11:
      var value = /** @type {!proto.serialization.Order.OrderType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 12:
      var value = /** @type {!proto.serialization.Order.OrderTimeInForce} */ (reader.readEnum());
      msg.setTimeinforce(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPositionid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getPricetrigger();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPricesl();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getPricetp();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getExpirationtime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getTimeinforce();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional uint64 ExternalId = 1;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getExternalid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Account = 2;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 PositionId = 3;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setPositionid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double Volume = 4;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setVolume = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double Price = 5;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double PriceTrigger = 6;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getPricetrigger = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setPricetrigger = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double PriceSl = 7;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getPricesl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setPricesl = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double PriceTp = 8;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getPricetp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setPricetp = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional int64 ExpirationTime = 9;
 * @return {number}
 */
proto.serialization.OrderCreateRequest.prototype.getExpirationtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setExpirationtime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional Order.OrderSide Side = 10;
 * @return {!proto.serialization.Order.OrderSide}
 */
proto.serialization.OrderCreateRequest.prototype.getSide = function() {
  return /** @type {!proto.serialization.Order.OrderSide} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.serialization.Order.OrderSide} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional Order.OrderType Type = 11;
 * @return {!proto.serialization.Order.OrderType}
 */
proto.serialization.OrderCreateRequest.prototype.getType = function() {
  return /** @type {!proto.serialization.Order.OrderType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.serialization.Order.OrderType} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional Order.OrderTimeInForce TimeInForce = 12;
 * @return {!proto.serialization.Order.OrderTimeInForce}
 */
proto.serialization.OrderCreateRequest.prototype.getTimeinforce = function() {
  return /** @type {!proto.serialization.Order.OrderTimeInForce} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.serialization.Order.OrderTimeInForce} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setTimeinforce = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional string Symbol = 13;
 * @return {string}
 */
proto.serialization.OrderCreateRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string Comment = 14;
 * @return {string}
 */
proto.serialization.OrderCreateRequest.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.OrderCreateRequest} returns this
 */
proto.serialization.OrderCreateRequest.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderModifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderModifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderModifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderModifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    account: jspb.Message.getFieldWithDefault(msg, 3, 0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    pricetrigger: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    pricesl: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    pricetp: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    expirationtime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    side: jspb.Message.getFieldWithDefault(msg, 9, 0),
    type: jspb.Message.getFieldWithDefault(msg, 10, 0),
    timeinforce: jspb.Message.getFieldWithDefault(msg, 11, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 12, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderModifyRequest}
 */
proto.serialization.OrderModifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderModifyRequest;
  return proto.serialization.OrderModifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderModifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderModifyRequest}
 */
proto.serialization.OrderModifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOrderid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricetrigger(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricesl(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricetp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationtime(value);
      break;
    case 9:
      var value = /** @type {!proto.serialization.Order.OrderSide} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 10:
      var value = /** @type {!proto.serialization.Order.OrderType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {!proto.serialization.Order.OrderTimeInForce} */ (reader.readEnum());
      msg.setTimeinforce(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderModifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderModifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderModifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderModifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOrderid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPricetrigger();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getPricesl();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPricetp();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getExpirationtime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getTimeinforce();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.OrderModifyRequest.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 OrderId = 2;
 * @return {number}
 */
proto.serialization.OrderModifyRequest.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 Account = 3;
 * @return {number}
 */
proto.serialization.OrderModifyRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double Price = 4;
 * @return {number}
 */
proto.serialization.OrderModifyRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double PriceTrigger = 5;
 * @return {number}
 */
proto.serialization.OrderModifyRequest.prototype.getPricetrigger = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setPricetrigger = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double PriceSl = 6;
 * @return {number}
 */
proto.serialization.OrderModifyRequest.prototype.getPricesl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setPricesl = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double PriceTp = 7;
 * @return {number}
 */
proto.serialization.OrderModifyRequest.prototype.getPricetp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setPricetp = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int64 ExpirationTime = 8;
 * @return {number}
 */
proto.serialization.OrderModifyRequest.prototype.getExpirationtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setExpirationtime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional Order.OrderSide Side = 9;
 * @return {!proto.serialization.Order.OrderSide}
 */
proto.serialization.OrderModifyRequest.prototype.getSide = function() {
  return /** @type {!proto.serialization.Order.OrderSide} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.serialization.Order.OrderSide} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional Order.OrderType Type = 10;
 * @return {!proto.serialization.Order.OrderType}
 */
proto.serialization.OrderModifyRequest.prototype.getType = function() {
  return /** @type {!proto.serialization.Order.OrderType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.serialization.Order.OrderType} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional Order.OrderTimeInForce TimeInForce = 11;
 * @return {!proto.serialization.Order.OrderTimeInForce}
 */
proto.serialization.OrderModifyRequest.prototype.getTimeinforce = function() {
  return /** @type {!proto.serialization.Order.OrderTimeInForce} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.serialization.Order.OrderTimeInForce} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setTimeinforce = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional string Symbol = 12;
 * @return {string}
 */
proto.serialization.OrderModifyRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string Comment = 13;
 * @return {string}
 */
proto.serialization.OrderModifyRequest.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.OrderModifyRequest} returns this
 */
proto.serialization.OrderModifyRequest.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderCancelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderCancelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderCancelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCancelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    account: jspb.Message.getFieldWithDefault(msg, 3, 0),
    side: jspb.Message.getFieldWithDefault(msg, 4, 0),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderCancelRequest}
 */
proto.serialization.OrderCancelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderCancelRequest;
  return proto.serialization.OrderCancelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderCancelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderCancelRequest}
 */
proto.serialization.OrderCancelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOrderid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 4:
      var value = /** @type {!proto.serialization.Order.OrderSide} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 5:
      var value = /** @type {!proto.serialization.Order.OrderType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderCancelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderCancelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderCancelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCancelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOrderid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.OrderCancelRequest.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCancelRequest} returns this
 */
proto.serialization.OrderCancelRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 OrderId = 2;
 * @return {number}
 */
proto.serialization.OrderCancelRequest.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCancelRequest} returns this
 */
proto.serialization.OrderCancelRequest.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 Account = 3;
 * @return {number}
 */
proto.serialization.OrderCancelRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCancelRequest} returns this
 */
proto.serialization.OrderCancelRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Order.OrderSide Side = 4;
 * @return {!proto.serialization.Order.OrderSide}
 */
proto.serialization.OrderCancelRequest.prototype.getSide = function() {
  return /** @type {!proto.serialization.Order.OrderSide} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.serialization.Order.OrderSide} value
 * @return {!proto.serialization.OrderCancelRequest} returns this
 */
proto.serialization.OrderCancelRequest.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Order.OrderType Type = 5;
 * @return {!proto.serialization.Order.OrderType}
 */
proto.serialization.OrderCancelRequest.prototype.getType = function() {
  return /** @type {!proto.serialization.Order.OrderType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.serialization.Order.OrderType} value
 * @return {!proto.serialization.OrderCancelRequest} returns this
 */
proto.serialization.OrderCancelRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string Symbol = 6;
 * @return {string}
 */
proto.serialization.OrderCancelRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.OrderCancelRequest} returns this
 */
proto.serialization.OrderCancelRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderMassCancelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderMassCancelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderMassCancelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderMassCancelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderMassCancelRequest}
 */
proto.serialization.OrderMassCancelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderMassCancelRequest;
  return proto.serialization.OrderMassCancelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderMassCancelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderMassCancelRequest}
 */
proto.serialization.OrderMassCancelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderMassCancelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderMassCancelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderMassCancelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderMassCancelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.OrderMassCancelRequest.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderMassCancelRequest} returns this
 */
proto.serialization.OrderMassCancelRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Account = 2;
 * @return {number}
 */
proto.serialization.OrderMassCancelRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderMassCancelRequest} returns this
 */
proto.serialization.OrderMassCancelRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Symbol = 3;
 * @return {string}
 */
proto.serialization.OrderMassCancelRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.OrderMassCancelRequest} returns this
 */
proto.serialization.OrderMassCancelRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.serialization.OrderMassStatusMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderMassStatusMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderMassStatusMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderMassStatusMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderMassStatusMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.serialization.Order.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderMassStatusMessage}
 */
proto.serialization.OrderMassStatusMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderMassStatusMessage;
  return proto.serialization.OrderMassStatusMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderMassStatusMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderMassStatusMessage}
 */
proto.serialization.OrderMassStatusMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = new proto.serialization.Order;
      reader.readMessage(value,proto.serialization.Order.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderMassStatusMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderMassStatusMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderMassStatusMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderMassStatusMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.serialization.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.OrderMassStatusMessage.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderMassStatusMessage} returns this
 */
proto.serialization.OrderMassStatusMessage.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Order Orders = 2;
 * @return {!Array<!proto.serialization.Order>}
 */
proto.serialization.OrderMassStatusMessage.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.serialization.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.serialization.Order, 2));
};


/**
 * @param {!Array<!proto.serialization.Order>} value
 * @return {!proto.serialization.OrderMassStatusMessage} returns this
*/
proto.serialization.OrderMassStatusMessage.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.serialization.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.serialization.Order}
 */
proto.serialization.OrderMassStatusMessage.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.serialization.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.serialization.OrderMassStatusMessage} returns this
 */
proto.serialization.OrderMassStatusMessage.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderCreatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderCreatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderCreatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCreatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: (f = msg.getOrder()) && proto.serialization.Order.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderCreatedMessage}
 */
proto.serialization.OrderCreatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderCreatedMessage;
  return proto.serialization.OrderCreatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderCreatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderCreatedMessage}
 */
proto.serialization.OrderCreatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.serialization.Order;
      reader.readMessage(value,proto.serialization.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderCreatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderCreatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderCreatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCreatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.serialization.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional Order Order = 1;
 * @return {?proto.serialization.Order}
 */
proto.serialization.OrderCreatedMessage.prototype.getOrder = function() {
  return /** @type{?proto.serialization.Order} */ (
    jspb.Message.getWrapperField(this, proto.serialization.Order, 1));
};


/**
 * @param {?proto.serialization.Order|undefined} value
 * @return {!proto.serialization.OrderCreatedMessage} returns this
*/
proto.serialization.OrderCreatedMessage.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serialization.OrderCreatedMessage} returns this
 */
proto.serialization.OrderCreatedMessage.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serialization.OrderCreatedMessage.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderCreateRejectedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderCreateRejectedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderCreateRejectedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCreateRejectedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    externalid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderCreateRejectedMessage}
 */
proto.serialization.OrderCreateRejectedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderCreateRejectedMessage;
  return proto.serialization.OrderCreateRejectedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderCreateRejectedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderCreateRejectedMessage}
 */
proto.serialization.OrderCreateRejectedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExternalid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderCreateRejectedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderCreateRejectedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderCreateRejectedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCreateRejectedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExternalid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 ExternalId = 1;
 * @return {number}
 */
proto.serialization.OrderCreateRejectedMessage.prototype.getExternalid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRejectedMessage} returns this
 */
proto.serialization.OrderCreateRejectedMessage.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Code = 2;
 * @return {number}
 */
proto.serialization.OrderCreateRejectedMessage.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCreateRejectedMessage} returns this
 */
proto.serialization.OrderCreateRejectedMessage.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderUpdatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderUpdatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderUpdatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderUpdatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: (f = msg.getOrder()) && proto.serialization.Order.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderUpdatedMessage}
 */
proto.serialization.OrderUpdatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderUpdatedMessage;
  return proto.serialization.OrderUpdatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderUpdatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderUpdatedMessage}
 */
proto.serialization.OrderUpdatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.serialization.Order;
      reader.readMessage(value,proto.serialization.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderUpdatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderUpdatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderUpdatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderUpdatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.serialization.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional Order Order = 1;
 * @return {?proto.serialization.Order}
 */
proto.serialization.OrderUpdatedMessage.prototype.getOrder = function() {
  return /** @type{?proto.serialization.Order} */ (
    jspb.Message.getWrapperField(this, proto.serialization.Order, 1));
};


/**
 * @param {?proto.serialization.Order|undefined} value
 * @return {!proto.serialization.OrderUpdatedMessage} returns this
*/
proto.serialization.OrderUpdatedMessage.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serialization.OrderUpdatedMessage} returns this
 */
proto.serialization.OrderUpdatedMessage.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serialization.OrderUpdatedMessage.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderModifyRejectedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderModifyRejectedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderModifyRejectedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderModifyRejectedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderModifyRejectedMessage}
 */
proto.serialization.OrderModifyRejectedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderModifyRejectedMessage;
  return proto.serialization.OrderModifyRejectedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderModifyRejectedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderModifyRejectedMessage}
 */
proto.serialization.OrderModifyRejectedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderModifyRejectedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderModifyRejectedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderModifyRejectedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderModifyRejectedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.OrderModifyRejectedMessage.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRejectedMessage} returns this
 */
proto.serialization.OrderModifyRejectedMessage.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Code = 2;
 * @return {number}
 */
proto.serialization.OrderModifyRejectedMessage.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderModifyRejectedMessage} returns this
 */
proto.serialization.OrderModifyRejectedMessage.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderDeletedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderDeletedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderDeletedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderDeletedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: (f = msg.getOrder()) && proto.serialization.Order.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderDeletedMessage}
 */
proto.serialization.OrderDeletedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderDeletedMessage;
  return proto.serialization.OrderDeletedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderDeletedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderDeletedMessage}
 */
proto.serialization.OrderDeletedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.serialization.Order;
      reader.readMessage(value,proto.serialization.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderDeletedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderDeletedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderDeletedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderDeletedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.serialization.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional Order Order = 1;
 * @return {?proto.serialization.Order}
 */
proto.serialization.OrderDeletedMessage.prototype.getOrder = function() {
  return /** @type{?proto.serialization.Order} */ (
    jspb.Message.getWrapperField(this, proto.serialization.Order, 1));
};


/**
 * @param {?proto.serialization.Order|undefined} value
 * @return {!proto.serialization.OrderDeletedMessage} returns this
*/
proto.serialization.OrderDeletedMessage.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serialization.OrderDeletedMessage} returns this
 */
proto.serialization.OrderDeletedMessage.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serialization.OrderDeletedMessage.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.OrderCancelRejectedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.OrderCancelRejectedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.OrderCancelRejectedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCancelRejectedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.OrderCancelRejectedMessage}
 */
proto.serialization.OrderCancelRejectedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.OrderCancelRejectedMessage;
  return proto.serialization.OrderCancelRejectedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.OrderCancelRejectedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.OrderCancelRejectedMessage}
 */
proto.serialization.OrderCancelRejectedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.OrderCancelRejectedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.OrderCancelRejectedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.OrderCancelRejectedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.OrderCancelRejectedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.OrderCancelRejectedMessage.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCancelRejectedMessage} returns this
 */
proto.serialization.OrderCancelRejectedMessage.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Code = 2;
 * @return {number}
 */
proto.serialization.OrderCancelRejectedMessage.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.OrderCancelRejectedMessage} returns this
 */
proto.serialization.OrderCancelRejectedMessage.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.Position.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    openprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    pricesl: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    pricetp: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    swap: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    createtime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    digits: jspb.Message.getFieldWithDefault(msg, 11, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 12, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.Position}
 */
proto.serialization.Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.Position;
  return proto.serialization.Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.Position}
 */
proto.serialization.Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {!proto.serialization.Position.PositionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpenprice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricesl(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricetp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSwap(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDigits(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getOpenprice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getPricesl();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPricetp();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getSwap();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getDigits();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.serialization.Position.PositionType = {
  POS_TYPE_UNKNOWN: 0,
  POS_TYPE_BUY: 1,
  POS_TYPE_SELL: 2
};

/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.serialization.Position.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Account = 2;
 * @return {number}
 */
proto.serialization.Position.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PositionType Type = 3;
 * @return {!proto.serialization.Position.PositionType}
 */
proto.serialization.Position.prototype.getType = function() {
  return /** @type {!proto.serialization.Position.PositionType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.serialization.Position.PositionType} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double Volume = 4;
 * @return {number}
 */
proto.serialization.Position.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setVolume = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double OpenPrice = 5;
 * @return {number}
 */
proto.serialization.Position.prototype.getOpenprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setOpenprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double PriceSl = 6;
 * @return {number}
 */
proto.serialization.Position.prototype.getPricesl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setPricesl = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double PriceTp = 7;
 * @return {number}
 */
proto.serialization.Position.prototype.getPricetp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setPricetp = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double Swap = 8;
 * @return {number}
 */
proto.serialization.Position.prototype.getSwap = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setSwap = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional int64 CreateTime = 9;
 * @return {number}
 */
proto.serialization.Position.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setCreatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 UpdateTime = 10;
 * @return {number}
 */
proto.serialization.Position.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setUpdatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 Digits = 11;
 * @return {number}
 */
proto.serialization.Position.prototype.getDigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setDigits = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string Symbol = 12;
 * @return {string}
 */
proto.serialization.Position.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string Comment = 13;
 * @return {string}
 */
proto.serialization.Position.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.Position} returns this
 */
proto.serialization.Position.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionMassStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionMassStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionMassStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionMassStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionMassStatusRequest}
 */
proto.serialization.PositionMassStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionMassStatusRequest;
  return proto.serialization.PositionMassStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionMassStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionMassStatusRequest}
 */
proto.serialization.PositionMassStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionMassStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionMassStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionMassStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionMassStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.PositionMassStatusRequest.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionMassStatusRequest} returns this
 */
proto.serialization.PositionMassStatusRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Account = 2;
 * @return {number}
 */
proto.serialization.PositionMassStatusRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionMassStatusRequest} returns this
 */
proto.serialization.PositionMassStatusRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Symbol = 3;
 * @return {string}
 */
proto.serialization.PositionMassStatusRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.PositionMassStatusRequest} returns this
 */
proto.serialization.PositionMassStatusRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionModifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionModifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionModifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionModifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    positionid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    account: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pricesl: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    pricetp: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    symbol: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionModifyRequest}
 */
proto.serialization.PositionModifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionModifyRequest;
  return proto.serialization.PositionModifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionModifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionModifyRequest}
 */
proto.serialization.PositionModifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositionid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricesl(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricetp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionModifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionModifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionModifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionModifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPositionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPricesl();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPricetp();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.PositionModifyRequest.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionModifyRequest} returns this
 */
proto.serialization.PositionModifyRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 PositionId = 2;
 * @return {number}
 */
proto.serialization.PositionModifyRequest.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionModifyRequest} returns this
 */
proto.serialization.PositionModifyRequest.prototype.setPositionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 Account = 3;
 * @return {number}
 */
proto.serialization.PositionModifyRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionModifyRequest} returns this
 */
proto.serialization.PositionModifyRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double PriceSl = 4;
 * @return {number}
 */
proto.serialization.PositionModifyRequest.prototype.getPricesl = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionModifyRequest} returns this
 */
proto.serialization.PositionModifyRequest.prototype.setPricesl = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double PriceTp = 5;
 * @return {number}
 */
proto.serialization.PositionModifyRequest.prototype.getPricetp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionModifyRequest} returns this
 */
proto.serialization.PositionModifyRequest.prototype.setPricetp = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string Symbol = 6;
 * @return {string}
 */
proto.serialization.PositionModifyRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.PositionModifyRequest} returns this
 */
proto.serialization.PositionModifyRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionCloseByRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionCloseByRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionCloseByRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionCloseByRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    positionid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    positionbyid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    account: jspb.Message.getFieldWithDefault(msg, 4, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionCloseByRequest}
 */
proto.serialization.PositionCloseByRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionCloseByRequest;
  return proto.serialization.PositionCloseByRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionCloseByRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionCloseByRequest}
 */
proto.serialization.PositionCloseByRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositionid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositionbyid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionCloseByRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionCloseByRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionCloseByRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionCloseByRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPositionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPositionbyid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.PositionCloseByRequest.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionCloseByRequest} returns this
 */
proto.serialization.PositionCloseByRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 PositionId = 2;
 * @return {number}
 */
proto.serialization.PositionCloseByRequest.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionCloseByRequest} returns this
 */
proto.serialization.PositionCloseByRequest.prototype.setPositionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 PositionById = 3;
 * @return {number}
 */
proto.serialization.PositionCloseByRequest.prototype.getPositionbyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionCloseByRequest} returns this
 */
proto.serialization.PositionCloseByRequest.prototype.setPositionbyid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 Account = 4;
 * @return {number}
 */
proto.serialization.PositionCloseByRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionCloseByRequest} returns this
 */
proto.serialization.PositionCloseByRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Symbol = 5;
 * @return {string}
 */
proto.serialization.PositionCloseByRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.PositionCloseByRequest} returns this
 */
proto.serialization.PositionCloseByRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.serialization.PositionMassStatusMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionMassStatusMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionMassStatusMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionMassStatusMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionMassStatusMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    proto.serialization.Position.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionMassStatusMessage}
 */
proto.serialization.PositionMassStatusMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionMassStatusMessage;
  return proto.serialization.PositionMassStatusMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionMassStatusMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionMassStatusMessage}
 */
proto.serialization.PositionMassStatusMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = new proto.serialization.Position;
      reader.readMessage(value,proto.serialization.Position.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionMassStatusMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionMassStatusMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionMassStatusMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionMassStatusMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.serialization.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.PositionMassStatusMessage.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionMassStatusMessage} returns this
 */
proto.serialization.PositionMassStatusMessage.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Position Positions = 2;
 * @return {!Array<!proto.serialization.Position>}
 */
proto.serialization.PositionMassStatusMessage.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.serialization.Position>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.serialization.Position, 2));
};


/**
 * @param {!Array<!proto.serialization.Position>} value
 * @return {!proto.serialization.PositionMassStatusMessage} returns this
*/
proto.serialization.PositionMassStatusMessage.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.serialization.Position=} opt_value
 * @param {number=} opt_index
 * @return {!proto.serialization.Position}
 */
proto.serialization.PositionMassStatusMessage.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.serialization.Position, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.serialization.PositionMassStatusMessage} returns this
 */
proto.serialization.PositionMassStatusMessage.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionCreatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionCreatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionCreatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionCreatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && proto.serialization.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionCreatedMessage}
 */
proto.serialization.PositionCreatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionCreatedMessage;
  return proto.serialization.PositionCreatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionCreatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionCreatedMessage}
 */
proto.serialization.PositionCreatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.serialization.Position;
      reader.readMessage(value,proto.serialization.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionCreatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionCreatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionCreatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionCreatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.serialization.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional Position Position = 1;
 * @return {?proto.serialization.Position}
 */
proto.serialization.PositionCreatedMessage.prototype.getPosition = function() {
  return /** @type{?proto.serialization.Position} */ (
    jspb.Message.getWrapperField(this, proto.serialization.Position, 1));
};


/**
 * @param {?proto.serialization.Position|undefined} value
 * @return {!proto.serialization.PositionCreatedMessage} returns this
*/
proto.serialization.PositionCreatedMessage.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serialization.PositionCreatedMessage} returns this
 */
proto.serialization.PositionCreatedMessage.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serialization.PositionCreatedMessage.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionUpdatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionUpdatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionUpdatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionUpdatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && proto.serialization.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionUpdatedMessage}
 */
proto.serialization.PositionUpdatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionUpdatedMessage;
  return proto.serialization.PositionUpdatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionUpdatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionUpdatedMessage}
 */
proto.serialization.PositionUpdatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.serialization.Position;
      reader.readMessage(value,proto.serialization.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionUpdatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionUpdatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionUpdatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionUpdatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.serialization.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional Position Position = 1;
 * @return {?proto.serialization.Position}
 */
proto.serialization.PositionUpdatedMessage.prototype.getPosition = function() {
  return /** @type{?proto.serialization.Position} */ (
    jspb.Message.getWrapperField(this, proto.serialization.Position, 1));
};


/**
 * @param {?proto.serialization.Position|undefined} value
 * @return {!proto.serialization.PositionUpdatedMessage} returns this
*/
proto.serialization.PositionUpdatedMessage.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serialization.PositionUpdatedMessage} returns this
 */
proto.serialization.PositionUpdatedMessage.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serialization.PositionUpdatedMessage.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionModifyRejectedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionModifyRejectedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionModifyRejectedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionModifyRejectedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionModifyRejectedMessage}
 */
proto.serialization.PositionModifyRejectedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionModifyRejectedMessage;
  return proto.serialization.PositionModifyRejectedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionModifyRejectedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionModifyRejectedMessage}
 */
proto.serialization.PositionModifyRejectedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionModifyRejectedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionModifyRejectedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionModifyRejectedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionModifyRejectedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.PositionModifyRejectedMessage.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionModifyRejectedMessage} returns this
 */
proto.serialization.PositionModifyRejectedMessage.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Code = 2;
 * @return {number}
 */
proto.serialization.PositionModifyRejectedMessage.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionModifyRejectedMessage} returns this
 */
proto.serialization.PositionModifyRejectedMessage.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionDeletedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionDeletedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionDeletedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionDeletedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && proto.serialization.Position.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionDeletedMessage}
 */
proto.serialization.PositionDeletedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionDeletedMessage;
  return proto.serialization.PositionDeletedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionDeletedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionDeletedMessage}
 */
proto.serialization.PositionDeletedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.serialization.Position;
      reader.readMessage(value,proto.serialization.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionDeletedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionDeletedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionDeletedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionDeletedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.serialization.Position.serializeBinaryToWriter
    );
  }
};


/**
 * optional Position Position = 1;
 * @return {?proto.serialization.Position}
 */
proto.serialization.PositionDeletedMessage.prototype.getPosition = function() {
  return /** @type{?proto.serialization.Position} */ (
    jspb.Message.getWrapperField(this, proto.serialization.Position, 1));
};


/**
 * @param {?proto.serialization.Position|undefined} value
 * @return {!proto.serialization.PositionDeletedMessage} returns this
*/
proto.serialization.PositionDeletedMessage.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serialization.PositionDeletedMessage} returns this
 */
proto.serialization.PositionDeletedMessage.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serialization.PositionDeletedMessage.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.PositionCloseByRejectedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.PositionCloseByRejectedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.PositionCloseByRejectedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionCloseByRejectedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    code: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.PositionCloseByRejectedMessage}
 */
proto.serialization.PositionCloseByRejectedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.PositionCloseByRejectedMessage;
  return proto.serialization.PositionCloseByRejectedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.PositionCloseByRejectedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.PositionCloseByRejectedMessage}
 */
proto.serialization.PositionCloseByRejectedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.PositionCloseByRejectedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.PositionCloseByRejectedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.PositionCloseByRejectedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.PositionCloseByRejectedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.PositionCloseByRejectedMessage.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionCloseByRejectedMessage} returns this
 */
proto.serialization.PositionCloseByRejectedMessage.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Code = 2;
 * @return {number}
 */
proto.serialization.PositionCloseByRejectedMessage.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.PositionCloseByRejectedMessage} returns this
 */
proto.serialization.PositionCloseByRejectedMessage.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.Deal.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.Deal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.Deal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.Deal.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, 0),
    orderid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    positionid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    direction: jspb.Message.getFieldWithDefault(msg, 6, 0),
    volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    profit: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    swap: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    commission: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    createtime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    symbol: jspb.Message.getFieldWithDefault(msg, 14, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.Deal}
 */
proto.serialization.Deal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.Deal;
  return proto.serialization.Deal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.Deal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.Deal}
 */
proto.serialization.Deal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOrderid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositionid(value);
      break;
    case 5:
      var value = /** @type {!proto.serialization.Deal.DealType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {!proto.serialization.Deal.DealDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProfit(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSwap(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCommission(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.Deal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.Deal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.Deal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.Deal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getOrderid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPositionid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getSwap();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getCommission();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.serialization.Deal.DealType = {
  DEAL_TYPE_UNKNOWN: 0,
  DEAL_TYPE_BUY: 1,
  DEAL_TYPE_SELL: 2
};

/**
 * @enum {number}
 */
proto.serialization.Deal.DealDirection = {
  DEAL_DIRECTION_UNKNOWN: 0,
  DEAL_DIRECTION_IN: 1,
  DEAL_DIRECTION_OUT: 2,
  DEAL_DIRECTION_INOUT: 3,
  DEAL_DIRECTION_OUTBY: 4
};

/**
 * optional uint64 Id = 1;
 * @return {number}
 */
proto.serialization.Deal.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Account = 2;
 * @return {number}
 */
proto.serialization.Deal.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 OrderId = 3;
 * @return {number}
 */
proto.serialization.Deal.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 PositionId = 4;
 * @return {number}
 */
proto.serialization.Deal.prototype.getPositionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setPositionid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional DealType Type = 5;
 * @return {!proto.serialization.Deal.DealType}
 */
proto.serialization.Deal.prototype.getType = function() {
  return /** @type {!proto.serialization.Deal.DealType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.serialization.Deal.DealType} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional DealDirection Direction = 6;
 * @return {!proto.serialization.Deal.DealDirection}
 */
proto.serialization.Deal.prototype.getDirection = function() {
  return /** @type {!proto.serialization.Deal.DealDirection} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.serialization.Deal.DealDirection} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional double Volume = 7;
 * @return {number}
 */
proto.serialization.Deal.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setVolume = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double Price = 8;
 * @return {number}
 */
proto.serialization.Deal.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double Profit = 9;
 * @return {number}
 */
proto.serialization.Deal.prototype.getProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double Swap = 10;
 * @return {number}
 */
proto.serialization.Deal.prototype.getSwap = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setSwap = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double Commission = 11;
 * @return {number}
 */
proto.serialization.Deal.prototype.getCommission = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setCommission = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double Fee = 12;
 * @return {number}
 */
proto.serialization.Deal.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int64 CreateTime = 13;
 * @return {number}
 */
proto.serialization.Deal.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setCreatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string Symbol = 14;
 * @return {string}
 */
proto.serialization.Deal.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string Comment = 15;
 * @return {string}
 */
proto.serialization.Deal.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.Deal} returns this
 */
proto.serialization.Deal.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.DealCreatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.DealCreatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.DealCreatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.DealCreatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    deal: (f = msg.getDeal()) && proto.serialization.Deal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.DealCreatedMessage}
 */
proto.serialization.DealCreatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.DealCreatedMessage;
  return proto.serialization.DealCreatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.DealCreatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.DealCreatedMessage}
 */
proto.serialization.DealCreatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.serialization.Deal;
      reader.readMessage(value,proto.serialization.Deal.deserializeBinaryFromReader);
      msg.setDeal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.DealCreatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.DealCreatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.DealCreatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.DealCreatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.serialization.Deal.serializeBinaryToWriter
    );
  }
};


/**
 * optional Deal Deal = 1;
 * @return {?proto.serialization.Deal}
 */
proto.serialization.DealCreatedMessage.prototype.getDeal = function() {
  return /** @type{?proto.serialization.Deal} */ (
    jspb.Message.getWrapperField(this, proto.serialization.Deal, 1));
};


/**
 * @param {?proto.serialization.Deal|undefined} value
 * @return {!proto.serialization.DealCreatedMessage} returns this
*/
proto.serialization.DealCreatedMessage.prototype.setDeal = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serialization.DealCreatedMessage} returns this
 */
proto.serialization.DealCreatedMessage.prototype.clearDeal = function() {
  return this.setDeal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serialization.DealCreatedMessage.prototype.hasDeal = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.AccountBalance.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.AccountBalance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.AccountBalance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.AccountBalance.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    credit: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    digits: jspb.Message.getFieldWithDefault(msg, 3, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.AccountBalance}
 */
proto.serialization.AccountBalance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.AccountBalance;
  return proto.serialization.AccountBalance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.AccountBalance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.AccountBalance}
 */
proto.serialization.AccountBalance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCredit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDigits(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.AccountBalance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.AccountBalance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.AccountBalance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.AccountBalance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getCredit();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDigits();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional double Amount = 1;
 * @return {number}
 */
proto.serialization.AccountBalance.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountBalance} returns this
 */
proto.serialization.AccountBalance.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double Credit = 2;
 * @return {number}
 */
proto.serialization.AccountBalance.prototype.getCredit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountBalance} returns this
 */
proto.serialization.AccountBalance.prototype.setCredit = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional uint32 Digits = 3;
 * @return {number}
 */
proto.serialization.AccountBalance.prototype.getDigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountBalance} returns this
 */
proto.serialization.AccountBalance.prototype.setDigits = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string Currency = 4;
 * @return {string}
 */
proto.serialization.AccountBalance.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.AccountBalance} returns this
 */
proto.serialization.AccountBalance.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.AccountInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.AccountInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.AccountInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.AccountInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.AccountInfoRequest}
 */
proto.serialization.AccountInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.AccountInfoRequest;
  return proto.serialization.AccountInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.AccountInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.AccountInfoRequest}
 */
proto.serialization.AccountInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.AccountInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.AccountInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.AccountInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.AccountInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.AccountInfoRequest.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountInfoRequest} returns this
 */
proto.serialization.AccountInfoRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Account = 2;
 * @return {number}
 */
proto.serialization.AccountInfoRequest.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountInfoRequest} returns this
 */
proto.serialization.AccountInfoRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.serialization.AccountInfoMessage.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.AccountInfoMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.AccountInfoMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.AccountInfoMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.AccountInfoMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, 0),
    stopoutlevel: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    margincalllevel: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    leverage: jspb.Message.getFieldWithDefault(msg, 5, 0),
    digits: jspb.Message.getFieldWithDefault(msg, 6, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 7, ""),
    balancesList: jspb.Message.toObjectList(msg.getBalancesList(),
    proto.serialization.AccountBalance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.AccountInfoMessage}
 */
proto.serialization.AccountInfoMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.AccountInfoMessage;
  return proto.serialization.AccountInfoMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.AccountInfoMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.AccountInfoMessage}
 */
proto.serialization.AccountInfoMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStopoutlevel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMargincalllevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeverage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDigits(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 8:
      var value = new proto.serialization.AccountBalance;
      reader.readMessage(value,proto.serialization.AccountBalance.deserializeBinaryFromReader);
      msg.addBalances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.AccountInfoMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.AccountInfoMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.AccountInfoMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.AccountInfoMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getStopoutlevel();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getMargincalllevel();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLeverage();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getDigits();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBalancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.serialization.AccountBalance.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 RequestId = 1;
 * @return {number}
 */
proto.serialization.AccountInfoMessage.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountInfoMessage} returns this
 */
proto.serialization.AccountInfoMessage.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Account = 2;
 * @return {number}
 */
proto.serialization.AccountInfoMessage.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountInfoMessage} returns this
 */
proto.serialization.AccountInfoMessage.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double StopoutLevel = 3;
 * @return {number}
 */
proto.serialization.AccountInfoMessage.prototype.getStopoutlevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountInfoMessage} returns this
 */
proto.serialization.AccountInfoMessage.prototype.setStopoutlevel = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double MarginCallLevel = 4;
 * @return {number}
 */
proto.serialization.AccountInfoMessage.prototype.getMargincalllevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountInfoMessage} returns this
 */
proto.serialization.AccountInfoMessage.prototype.setMargincalllevel = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 Leverage = 5;
 * @return {number}
 */
proto.serialization.AccountInfoMessage.prototype.getLeverage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountInfoMessage} returns this
 */
proto.serialization.AccountInfoMessage.prototype.setLeverage = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 Digits = 6;
 * @return {number}
 */
proto.serialization.AccountInfoMessage.prototype.getDigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountInfoMessage} returns this
 */
proto.serialization.AccountInfoMessage.prototype.setDigits = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string Currency = 7;
 * @return {string}
 */
proto.serialization.AccountInfoMessage.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.serialization.AccountInfoMessage} returns this
 */
proto.serialization.AccountInfoMessage.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated AccountBalance Balances = 8;
 * @return {!Array<!proto.serialization.AccountBalance>}
 */
proto.serialization.AccountInfoMessage.prototype.getBalancesList = function() {
  return /** @type{!Array<!proto.serialization.AccountBalance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.serialization.AccountBalance, 8));
};


/**
 * @param {!Array<!proto.serialization.AccountBalance>} value
 * @return {!proto.serialization.AccountInfoMessage} returns this
*/
proto.serialization.AccountInfoMessage.prototype.setBalancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.serialization.AccountBalance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.serialization.AccountBalance}
 */
proto.serialization.AccountInfoMessage.prototype.addBalances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.serialization.AccountBalance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.serialization.AccountInfoMessage} returns this
 */
proto.serialization.AccountInfoMessage.prototype.clearBalancesList = function() {
  return this.setBalancesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.serialization.AccountBalanceUpdatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.serialization.AccountBalanceUpdatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.serialization.AccountBalanceUpdatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.AccountBalanceUpdatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, 0),
    balance: (f = msg.getBalance()) && proto.serialization.AccountBalance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.serialization.AccountBalanceUpdatedMessage}
 */
proto.serialization.AccountBalanceUpdatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.serialization.AccountBalanceUpdatedMessage;
  return proto.serialization.AccountBalanceUpdatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.serialization.AccountBalanceUpdatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.serialization.AccountBalanceUpdatedMessage}
 */
proto.serialization.AccountBalanceUpdatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccount(value);
      break;
    case 2:
      var value = new proto.serialization.AccountBalance;
      reader.readMessage(value,proto.serialization.AccountBalance.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.serialization.AccountBalanceUpdatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.serialization.AccountBalanceUpdatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.serialization.AccountBalanceUpdatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.serialization.AccountBalanceUpdatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.serialization.AccountBalance.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 Account = 1;
 * @return {number}
 */
proto.serialization.AccountBalanceUpdatedMessage.prototype.getAccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.serialization.AccountBalanceUpdatedMessage} returns this
 */
proto.serialization.AccountBalanceUpdatedMessage.prototype.setAccount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional AccountBalance Balance = 2;
 * @return {?proto.serialization.AccountBalance}
 */
proto.serialization.AccountBalanceUpdatedMessage.prototype.getBalance = function() {
  return /** @type{?proto.serialization.AccountBalance} */ (
    jspb.Message.getWrapperField(this, proto.serialization.AccountBalance, 2));
};


/**
 * @param {?proto.serialization.AccountBalance|undefined} value
 * @return {!proto.serialization.AccountBalanceUpdatedMessage} returns this
*/
proto.serialization.AccountBalanceUpdatedMessage.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.serialization.AccountBalanceUpdatedMessage} returns this
 */
proto.serialization.AccountBalanceUpdatedMessage.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.serialization.AccountBalanceUpdatedMessage.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.serialization);
